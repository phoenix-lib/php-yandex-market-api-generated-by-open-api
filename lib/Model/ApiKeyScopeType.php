<?php
/**
 * ApiKeyScopeType
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Яндекс Маркета для продавцов
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ApiKeyScopeType Class Doc Comment
 *
 * @category Class
 * @description Доступы к методам:  * &#x60;ALL_METHODS&#x60; — полное управление кабинетом. * &#x60;ALL_METHODS_READ_ONLY&#x60; — просмотр всей информации в кабинете. * &#x60;INVENTORY_AND_ORDER_PROCESSING&#x60; — обработка заказов и учет товаров. * &#x60;INVENTORY_AND_ORDER_PROCESSING_READ_ONLY&#x60; — просмотр информации о заказах. * &#x60;PRICING&#x60; — управление ценами. * &#x60;PRICING_READ_ONLY&#x60; — просмотр цен. * &#x60;OFFERS_AND_CARDS_MANAGEMENT&#x60; — управление товарами и карточками. * &#x60;OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY&#x60; — просмотр товаров и карточек. * &#x60;PROMOTION&#x60; — продвижение товаров. * &#x60;PROMOTION_READ_ONLY&#x60; — просмотр информации о продвижении товаров. * &#x60;FINANCE_AND_ACCOUNTING&#x60; — просмотр финансовой информации и отчётности. * &#x60;COMMUNICATION&#x60; — общение с покупателями. * &#x60;SETTINGS_MANAGEMENT&#x60; — настройка магазинов. * &#x60;SUPPLIES_MANAGEMENT_READ_ONLY&#x60; — получение информации по FBY-заявкам.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ApiKeyScopeType
{
    /**
     * Possible values of this enum
     */
    public const ALL_METHODS = 'ALL_METHODS';

    public const ALL_METHODS_READ_ONLY = 'ALL_METHODS_READ_ONLY';

    public const INVENTORY_AND_ORDER_PROCESSING = 'INVENTORY_AND_ORDER_PROCESSING';

    public const INVENTORY_AND_ORDER_PROCESSING_READ_ONLY = 'INVENTORY_AND_ORDER_PROCESSING_READ_ONLY';

    public const PRICING = 'PRICING';

    public const PRICING_READ_ONLY = 'PRICING_READ_ONLY';

    public const OFFERS_AND_CARDS_MANAGEMENT = 'OFFERS_AND_CARDS_MANAGEMENT';

    public const OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY = 'OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY';

    public const PROMOTION = 'PROMOTION';

    public const PROMOTION_READ_ONLY = 'PROMOTION_READ_ONLY';

    public const FINANCE_AND_ACCOUNTING = 'FINANCE_AND_ACCOUNTING';

    public const COMMUNICATION = 'COMMUNICATION';

    public const SETTINGS_MANAGEMENT = 'SETTINGS_MANAGEMENT';

    public const SUPPLIES_MANAGEMENT_READ_ONLY = 'SUPPLIES_MANAGEMENT_READ_ONLY';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ALL_METHODS,
            self::ALL_METHODS_READ_ONLY,
            self::INVENTORY_AND_ORDER_PROCESSING,
            self::INVENTORY_AND_ORDER_PROCESSING_READ_ONLY,
            self::PRICING,
            self::PRICING_READ_ONLY,
            self::OFFERS_AND_CARDS_MANAGEMENT,
            self::OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY,
            self::PROMOTION,
            self::PROMOTION_READ_ONLY,
            self::FINANCE_AND_ACCOUNTING,
            self::COMMUNICATION,
            self::SETTINGS_MANAGEMENT,
            self::SUPPLIES_MANAGEMENT_READ_ONLY
        ];
    }
}


