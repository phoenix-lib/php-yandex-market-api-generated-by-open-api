<?php
/**
 * OrdersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrdersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for acceptOrderCancellation
     *
     * Отмена заказа покупателем.
     *
     */
    public function testAcceptOrderCancellation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrder
     *
     * Информация об одном заказе.
     *
     */
    public function testGetOrder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrders
     *
     * Информация о нескольких заказах.
     *
     */
    public function testGetOrders()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for provideOrderDigitalCodes
     *
     * Передача ключей цифровых товаров.
     *
     */
    public function testProvideOrderDigitalCodes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for provideOrderItemIdentifiers
     *
     * Передача кодов маркировки единиц товара.
     *
     */
    public function testProvideOrderItemIdentifiers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrderBoxLayout
     *
     * Подготовка заказа.
     *
     */
    public function testSetOrderBoxLayout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrderShipmentBoxes
     *
     * Передача количества грузовых мест в заказе.
     *
     */
    public function testSetOrderShipmentBoxes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrderItems
     *
     * Удаление товара из заказа или уменьшение числа единиц.
     *
     */
    public function testUpdateOrderItems()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrderStatus
     *
     * Изменение статуса одного заказа.
     *
     */
    public function testUpdateOrderStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrderStatuses
     *
     * Изменение статусов нескольких заказов.
     *
     */
    public function testUpdateOrderStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
